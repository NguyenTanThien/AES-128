module KeyExpansion(CLK, RESET, S, C, KEY, W);
  input wire CLK, RESET, S;
  input wire [127:0] KEY;
  input wire [3:0] C;
  output wire [127:0] W;
  reg temp;
  wire temp1;
  wire [127:0] outtri,adw;
  wire [31:0] inxor1,inxor2,inxor3,inxor4,inrot,word,outsub,rcon;
  always @(CLK or RESET or S or C or KEY) begin
    if(C == 1 && S == 0) temp = 0;
    else if (C == 10 && S == 1) temp= 0;
    else temp = 1;
  end
  not aa(temp1,temp);
  bufif1 inst1c[127:0](outtri,KEY,temp1);
  bufif1 inst2e[127:0](outtri,W,temp);
  bufif1 b03[31:0](inxor1,outtri[63:32],S);
  bufif1 b04[31:0](inxor2,outtri[95:64],S);
  bufif1 b05[31:0](inxor3,outtri[127:96],S);
  addW inst(outtri[31:0],inxor1,adw[31:0]);
  addW inst1(outtri[63:32],inxor2,adw[63:32]);
  addW inst2(outtri[95:64],inxor3,adw[95:64]);
  addW inst3(outtri[127:96],inxor4,adw[127:96]);
  bufif1 b06[31:0](inxor1,adw[63:32],!S);
  bufif1 b07[31:0](inxor2,adw[95:64],!S);
  bufif1 b08[31:0](inxor3,adw[127:96],!S);
  bufif1 b09[31:0](inrot,outtri[31:0],!S);
  bufif1 b1[31:0](inrot,adw[31:0],S);
  RotWord inst4(inrot,word[31:0]);
  SubWord inst5(word[31:0],outsub[31:0]);
  AddRcon inst6(C,rcon);
  addW inst7(rcon,outsub,inxor4);
  REG #(128) inst11(CLK, RESET,adw[127:0],W[127:0]);
endmodule
